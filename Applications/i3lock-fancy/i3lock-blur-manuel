#!/bin/bash

# Dependencies: imagemagick, i3lock-color-git, scrot

IMAGE=$(mktemp)
TEXT="Type password to unlock"

# get path where the script is located
# its used for the lock icon
pushd `dirname $0` > /dev/null
SCRIPTPATH=`pwd`
popd > /dev/null

VALUE="60" #brightness value to compare to

SIZE="1366x768"
# 1366x768"

INFO="$SCRIPTPATH"'/bg.info'
IN="$SCRIPTPATH"'/bg_.png'
OUT="$SCRIPTPATH"'/bg.png'
PARAM="$SCRIPTPATH"'/param.info'
BG=$(cat ~/.config/nitrogen/bg-saved.cfg | grep file | cut -d'=' -f2)

BACK="#ffffff"

#this is where the screenshot happens
if [[ $(cat $INFO) != $BG ]]; then #check if background changed

	i3-msg workspace 100:LOCK
	i3-msg bar mode hide
	sleep 2
	scrot $IN
	convert $IN \
		-filter Gaussian \
		-resize 20% \
		-define filter:sigma=1.5 \
		-resize 500% \
		$IN
	~/.config/i3/do.sh xterm-f -T _FLOATING_BORDERLESS_ -b 0 \
		-e "/home/manuel/Applications/_SCRIPTS/selector.sh $IN /home/manuel/Applications/i3lock-fancy/color.temp"
	IFS=',' && read -r -a color_a <<< $(</home/manuel/Applications/i3lock-fancy/color.temp)
	IFS=' ' && read -r -a color_a <<< $color_a
	rm -f /home/manuel/Applications/i3lock-fancy/color.temp
	COLOR=$(printf '%02x%02x%02x' ${color_a[0]} ${color_a[1]} ${color_a[2]})
	BRIGHTNESS=`convert $IN -colorspace hsb -resize 1x1 txt:- | sed -E '/.*$/ {
	                             N
	                             s/.*\n.*([0-9]{1,2}[^\.])\.[0-9]+%\)$/\1/
	                             }'`;
	# pixelate: -scale 10% -scale 1000%
	i3-msg workspace back_and_forth
	i3-msg restart
	if [ "$BRIGHTNESS" -gt "$VALUE" ]; then #white background image and black text
		FONT="#000000"
		SHADOW="#ffffff"
		LOCK="$SCRIPTPATH/lockdark.png" #rrggbbaa
		printf '\--textcolor=00000000 \
			\--insidecolor=0000001c \
			\--ringcolor=0000003e \
			\--linecolor=00000000 \
			\--keyhlcolor='$COLOR'80 \
			\--bshlcolor=ffffff80 \
			\--ringvercolor=ffffff00 \
			\--insidevercolor=ffffff1c \
			\--ringwrongcolor='$COLOR'55 \
			\--insidewrongcolor=ffffff1c' | tr -d '\\\n\t' > $PARAM
	else #black
		FONT="#ffffff"
		SHADOW="#000000"
		LOCK="$SCRIPTPATH/lock.png" #rrggbbaa #1c000000
		printf '\--textcolor=ffffff00 \
			\--insidecolor=ffffff1c \
			\--ringcolor=ffffff3e \
			\--linecolor=ffffff00 \
			\--keyhlcolor='$COLOR'80 \
			\--bshlcolor=00000080 \
			\--ringvercolor=00000000 \
			\--insidevercolor=0000001c \
			\--ringwrongcolor='$COLOR'55 \
			\--insidewrongcolor=0000001c' | tr -d '\\\n\t' > $PARAM
	fi
	# -level 0%,100%,0.6
	convert $IN \
		-filter Gaussian \
		-resize 20% \
		-define filter:sigma=1.5 \
		-resize 500% \
		\( \
			-size $SIZE xc:none \
			-font Roboto-Light \
			-pointsize 48 \
			-fill "$FONT" \
			-gravity center \
			-annotate +0+160 "$TEXT" \
			\( \
				+clone -background "$SHADOW"  -shadow 70x4+0+0 \
			\) +swap \
		\) \
		\( \
			-size $SIZE xc:none \
			-gravity center \
			"$LOCK" \
			-composite \
			\( \
				+clone -background "$SHADOW"  -shadow 70x4+0+0 \
			\) +swap \
		\) \
		-flatten \
		"$OUT"
	echo $BG > $INFO
	rm $IN
fi

# try to use a forked version of i3lock with prepared parameters
i3lock-color $(cat $PARAM) -i $OUT > /dev/null 2>&1

if [ $? -ne 0 ]; then
	# We have failed, lets get back to stock one
	echo err, i3lock-color not found
	i3lock -i $OUT
fi
